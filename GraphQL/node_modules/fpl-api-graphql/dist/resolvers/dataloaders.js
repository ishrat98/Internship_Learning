"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const axios_1 = require("axios");
const DataLoader = require("dataloader");
const humps = require("humps");
/**
 * Hooks into available fpl endpoints.
 * The Available end-points are:
 */
axios_1.default.defaults.baseURL = 'https://fantasy.premierleague.com/api';
function bootstrapLoader() {
    return dataLoader.load(`/bootstrap-static/`);
}
exports.bootstrapLoader = bootstrapLoader;
function elementSummaryLoader(id) {
    return dataLoader.load(`/element-summary/${id}/`);
}
exports.elementSummaryLoader = elementSummaryLoader;
function entryLoader(id) {
    return dataLoader.load(`/entry/${id}/`);
}
exports.entryLoader = entryLoader;
function entryHistoryLoader(id) {
    return dataLoader.load(`/entry/${id}/history/`);
}
exports.entryHistoryLoader = entryHistoryLoader;
function entryPicksLoader(entryId, event) {
    return dataLoader.load(`/entry/${entryId}/event/${event}/picks/`);
}
exports.entryPicksLoader = entryPicksLoader;
function entryTransfersLoader(id) {
    return dataLoader.load(`/entry/${id}/transfers/`);
}
exports.entryTransfersLoader = entryTransfersLoader;
function eventLiveLoaderMany(events) {
    const keys = events.map(event => {
        return `/event/${event}/live/`;
    });
    return dataLoader.loadMany(keys);
}
exports.eventLiveLoaderMany = eventLiveLoaderMany;
function eventLiveLoader(event) {
    return dataLoader.load(`/event/${event}/live/`);
}
exports.eventLiveLoader = eventLiveLoader;
function leagueClassicLoader(id, pageNumber) {
    return dataLoader.load(`/leagues-classic-standings/${id}?ls-page=${pageNumber}/`);
}
exports.leagueClassicLoader = leagueClassicLoader;
const dataLoader = new DataLoader(keys => {
    return axios_1.default.all(keys.map((key) => axios_1.default.get(key).then(response => humps.camelizeKeys(response.data))));
});
// clear cache every 2 hours
setInterval(() => {
    dataLoader.clearAll();
}, 1000 * 60 * 60 * 2);
